plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.14'
    // Allows you to create custom runtime images for modular applications (jpackage)
    id 'org.beryx.jlink' version '3.0.1'
}

group 'dev.sbytmacke'
// Borrar la versión para poder ejecutar el jpackage

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'dev.sbytmacke.onlyprofit'
    mainClass = 'dev.sbytmacke.onlyprofit.AppMain'
}

javafx {
    version = '17.0.8'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    // Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // MongoDb
    implementation("org.mongodb:mongodb-driver-sync:4.10.2")
    //implementation('org.mongodb:bson:4.9.0')
    //implementation("org.mongodb:mongodb-driver-core:4.10.2")

    // GSON
    implementation("com.google.code.gson:gson:2.10.1")

    // Logback
    //implementation("ch.qos.logback:logback-classic:1.4.7")
    implementation('org.slf4j:slf4j-api:2.0.5')
    implementation('org.slf4j:slf4j-simple:2.0.5')

    // Server
    //implementation("javax.servlet:javax.servlet-api:4.0.1")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'OnlyProfit'
    }
    // Magia para combinar el módulo de loggers
    forceMerge("slf4j")

    jpackage {
        // No carga el icono, pero si encuentra el icono
        imageOptions += ['--icon', './src/main/resources/dev/sbytmacke/onlyprofit/icons/main_icon.ico']
        // Si queremos que nos salga el cmd con los loggers
        /* if (org.gradle.internal.os.OperatingSystem.current().windows) {
             installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
             imageOptions += ['--win-console']
         }*/
    }
}

/*jar {
    doFirst {
        def serviceDir = file("$buildDir/META-INF/services")
        serviceDir.deleteDir()
        serviceDir.mkdirs()
    }

    manifest {
        attributes "Main-Class": "dev.sbytmacke.tokenhelper.AppMain"
    }

    // Include service files from the buildDir.
    from fileTree(buildDir).matching { include 'META-INF/services/*' }
}*/

// cd C:'\\Program Files\'\javafx-sdk-17.0.8\lib
// java --module-path . --add-modules javafx.controls,javafx.fxml -cp ".\mongodb-driver-sync-4.10.2.jar;.\bson-4.10.2.jar" -jar C:\Users\chivi\Desktop\git-ephemeral\TokenHelper\TokenHelper\build\libs\TokenHelper.jar

//java --module-path C:'\\Program Files\'\javafx-sdk-17.0.8\lib --add-modules javafx.controls,javafx.fxml -jar TokenHelper.jar
